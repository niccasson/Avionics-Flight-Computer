#ifndef ALTIMETER_H
#define ALTIMETER_H
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// UMSATS 2018-2020
//
// Repository:
//  UMSATS Google Drive: UMSATS/Guides and HowTos.../Command and Data Handling (CDH)/Coding Standards
//
// File Description:
//  Template header file for C / C++ projects. Unused sections can be deleted.
//
// History
// 2019-01-13 by Tamkin Rahman
// - Created.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// INCLUDES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//#include "FreeRTOS.h"
//#include "task.h"
//#include "pressure_sensor_bmp280.h"

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// DEFINITIONS AND MACROS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// ENUMS AND ENUM TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <stdint.h>
#include "configuration.h"
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// STRUCTS AND STRUCT TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// CONSTANTS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
static const float reference_pressure = 101325; // [Pa] Static pressure at b=0 level
static const float reference_altitude = 0; // [m] height at bottom of layer b

static const float temperature_static = 288.15; // [K] static temperature at b=0 level
//Doubling the lapse_rate_static fixed the data discrepancy between COTS and SRAD
static const float lapse_rate_static = -0.0065*2; // [K/m]  standard temperature laspe rate (K/m) in International Standard Atmosphere
static const float UNIVERSAL_GAS_CONST = 8.3144598; // [J/mol/K] universal gas constant
static const float GRAVITATIONAL_CONST = 9.80665; // [m/s^2] acceleration due to gravity
static const float MOLAR_MASS_AIR = 0.0289644; // [kg/mol] molar mass of Earth's air


typedef union {

	float float_val;
	uint32_t byte_val;
} alt_value;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// FUNCTION PROTOTYPES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Task to test altimeter readings
//  Display altitude reading continuously to UART output.
//    - initializes & configures sensor
//    - read data & calculate altitude
//    - print to UART screen
//
// Returns:
//  VOID
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//void vTask_altimeter(void *pvParameters);

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Calculate altitude from pressure reading
//
// Parameters:
//  Pressure - [Pa]
//
// Returns:
//  float - float value of altitude approximation
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
alt_value altitude_approx(float pressure, float temperature,configData_t*config);

#endif // TEMPLATE_H
