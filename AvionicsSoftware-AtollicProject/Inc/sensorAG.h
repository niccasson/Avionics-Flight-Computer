#ifndef SENSOR_AG_H
#define SENSOR_AG_H
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// UMSATS 2018-2020
//
// Repository:
//  ?Not this:UMSATS Google Drive: UMSATS/Guides and HowTos.../Command and Data Handling (CDH)/Coding Standards
//
// File Description:
//  Reads sensor data for accelerometer and gyroscope from the BMI088
//
// History
// 2019-03-29 by Benjamin Zacharias
// - Created.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// INCLUDES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "bmi08x.h"
#include "bmi088.h"
#include "SPI.h"
#include "cmsis_os.h"
#include "hardwareDefs.h"
#include "configuration.h"

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// DEFINITIONS AND MACROS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// ENUMS AND ENUM TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// STRUCTS AND STRUCT TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//Groups both sensor readings and a time stamp.
typedef struct {

	struct bmi08x_sensor_data	data_acc;
	struct bmi08x_sensor_data	data_gyro;
	uint32_t time_ticks;	//time of sensor reading in ticks.
}imu_data_struct;

//Parameters for vTask_sensorAG.
typedef struct{

	UART_HandleTypeDef * huart;
	QueueHandle_t imu_queue;
	configData_t *flightCompConfig;

} ImuTaskStruct;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// TYPEDEFS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// CONSTANTS
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// FUNCTION PROTOTYPES
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
// Description:
//  Enter description for public function here.
//
// Returns:
//  Enter description of return values (if any).
//-------------------------------------------------------------------------------------------------------------------------------------------------------------

//Wrapper functions for read and write
int8_t user_spi_read(uint8_t dev_addr, uint8_t reg_addr, uint8_t *data, uint16_t len);
int8_t user_spi_write(uint8_t dev_addr, uint8_t reg_addr, uint8_t *data, uint16_t len);

void delay(uint32_t period);

void vTask_sensorAG(void *param);

//configuration functions for accelerometer and gyroscope
int8_t accel_config(struct bmi08x_dev *bmi088dev,configData_t * configParams, int8_t rslt);
int8_t gyro_config(struct bmi08x_dev *bmi088dev,configData_t * configParams, int8_t rslt);

void update_IMU_data_launchpad(imu_data_struct *curr_imu_reading);

#endif // SENSOR_AG_H
